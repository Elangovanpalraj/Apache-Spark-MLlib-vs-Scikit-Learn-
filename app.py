import streamlit as st
import pandas as pd
import joblib

# Load model and vectorizer
vectorizer = joblib.load("tfidf_vectorizer.pkl")
model = joblib.load("review_sentiment_model.pkl")

# -------------------------------
# Title
st.title("ЁЯУж Amazon Review Sentiment Classifier")
st.write("роЗроирпНрод app роорпВро▓роорпН роЙроЩрпНроХро│рпН ро╡ро┐рооро░рпНроЪройродрпНродро┐ройрпН nature (роиро▓рпНро▓родро╛ / роорпЛроЪрооро╛) роОройрпНрокродрпИ роХрогро┐роХрпНроХро▓ро╛роорпН.")

# -------------------------------
# Single Review Prediction
st.header("тЬНя╕П родройро┐рокрпНрокроЯрпНроЯ ро╡ро┐рооро░рпНроЪройроХрпН роХрогро┐рокрпНрокрпБ")

user_input = st.text_area("ЁЯУЭ роЙроЩрпНроХро│рпН ро╡ро┐рооро░рпНроЪройродрпНродрпИ роЙро│рпНро│ро┐роЯрпБроЩрпНроХро│рпН:")

if st.button("ЁЯФН роХрогро┐роХрпНроХ"):
    if user_input.strip() == "":
        st.warning("тЫФ ро╡ро┐рооро░рпНроЪройродрпНродрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН.")
    else:
        input_vec = vectorizer.transform([user_input])
        prediction = model.predict(input_vec)[0]
        if prediction == 1:
            st.success("тЬЕ роЗродрпБ роТро░рпБ роиро▓рпНро▓ ро╡ро┐рооро░рпНроЪройроорпН (Positive Review).")
        else:
            st.error("тЭМ роЗродрпБ роТро░рпБ роорпЛроЪрооро╛рой ро╡ро┐рооро░рпНроЪройроорпН (Negative Review).")

# -------------------------------
# Bulk CSV Upload & Prediction
st.header("ЁЯУБ CSV ро╡ро┐рооро░рпНроЪройроЩрпНроХро│рпИ роХрпИропро╛ро│ро▓рпН (Bulk Prediction)")

uploaded_file = st.file_uploader("CSV роХрпЛрокрпНрокрпИ рокродро┐ро╡рпЗро▒рпНро▒рпБроХ (column name: 'reviewText')", type=["csv"])

if uploaded_file is not None:
    try:
        df = pd.read_csv(uploaded_file)

        if 'reviewText' not in df.columns:
            st.error("тЭМ 'reviewText' column роЗро▓рпНро▓рпИ. CSV column name роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН.")
        else:
            st.success(f"тЬЕ {len(df)} ро╡ро┐рооро░рпНроЪройроЩрпНроХро│рпН роПро▒рпНро▒рокрпНрокроЯрпНроЯрой.")
            input_vecs = vectorizer.transform(df['reviewText'].fillna(""))
            preds = model.predict(input_vecs)
            df['Prediction'] = preds
            df['Sentiment'] = df['Prediction'].apply(lambda x: 'Positive' if x == 1 else 'Negative')

            st.dataframe(df[['reviewText', 'Sentiment']])

            csv_download = df.to_csv(index=False).encode('utf-8')
            st.download_button(
                label="ЁЯУе роорпБроЯро┐ро╡рпБроХро│рпИрокрпН рокродро┐ро╡ро┐ро▒роХрпНроХрпБ",
                data=csv_download,
                file_name='predicted_reviews.csv',
                mime='text/csv'
            )

    except Exception as e:
        st.error(f"тЪая╕П рокро┐ро┤рпИ роПро▒рпНрокроЯрпНроЯродрпБ: {e}")
